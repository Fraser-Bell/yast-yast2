# use the shared Yast defaults
inherit_from:
  /usr/share/YaST2/data/devtools/data/rubocop_yast_style.yml

Metrics/AbcSize:
  Max: 446

Metrics/BlockNesting:
  Max: 5

Metrics/ClassLength:
  Max: 2880

Metrics/CyclomaticComplexity:
  Max: 63

Metrics/LineLength:
  Max: 274

Metrics/MethodLength:
  Max: 931

Metrics/ParameterLists:
  Max: 11

Metrics/PerceivedComplexity:
  Max: 70

# Configuration parameters: EnforcedStyle, SupportedStyles.
# JR: I personally think that having this variable on class level is much more readable
# and easier to recognize that access visibility changed
Style/AccessModifierIndentation:
  EnforcedStyle: outdent

Style/AccessorMethodName:
  # keep backward compatibility, but do not allow new code to be non-ruby style
  Exclude:
    - library/systemd/src/modules/systemd_target.rb

# Keep non-ascii comments as it contains e.g. examples for Punycode
Style/AsciiComments:
  Enabled: false

# UI_ID module is not camel case
Style/ClassAndModuleCamelCase:
  Enabled: false

# ensure new code is properly documented
Style/Documentation:
  Include:
    - "library/*/src/lib/**/*.rb"

# keep double negation as conversion to boolean
Style/DoubleNegation:
  Enabled: false

Style/FileName:
  Include:
    - "library/*/src/lib/**/*.rb"

Style/MethodName:
  Include:
    - "library/*/src/lib/**/*.rb"

# keep it as it is part of API for old code
Style/PredicateName:
  Include:
    - "library/*/src/lib/**/*.rb"

# for old code keep it as often methods names are wrong and part of API
Style/TrivialAccessors:
  Include:
    - "library/*/src/lib/**/*.rb"

Style/VariableName:
  Include:
    - "library/*/src/lib/**/*.rb"
