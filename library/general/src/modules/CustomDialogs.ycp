/****************************************************************************

Copyright (c) 2002 - 2012 Novell, Inc.
All Rights Reserved.

This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public License as
published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, contact Novell, Inc.

To contact Novell about this file by physical or electronic mail,
you may find current contact information at www.novell.com

****************************************************************************/
/**
 * File:	modules/CustomDialogs.ycp
 * Module:	yast2
 * Summary:	Installation mode
 * Authors:	Klaus Kaempf <kkaempf@suse.de>
 *
 * $Id$
 *
 */
{
    module "CustomDialogs";

    global map load_file_locale (list<string> patterns, string file_path , string language)
    {
        string text = "";
        string file = "";
        integer i = 0;
        while (i < size(patterns))
        {
            string p = patterns[i]:"";
            string tmp = file_path + "/" + p;
            if (!issubstring(p, "%"))
            {
                y2debug("no pattern");
                y2debug("checking for %1", tmp );
                text = (string)SCR::Read (.target.string, [tmp, ""]);
                if (text != "")
                    break;
                else
                {
                    i = i + 1;
                    continue;
                }
            }
            file = sformat (tmp, language);
            y2debug("checking for %1", file );
            text = (string)SCR::Read (.target.string, [file, ""]);
            if (text != "")
                break;

            file = sformat (tmp, substring (language, 0, 2));
            y2debug("checking for %1", file );
            text = (string)SCR::Read (.target.string, [file, ""]);
            if (text != "")
                break;

            file = sformat (tmp, "en");
            y2debug("checking for %1", file );
            text = (string)SCR::Read (.target.string, [file, ""]);
            if (text != "")
                break;
            i = i + 1;
        }
        return $["text":text, "file":file];
    }


}
